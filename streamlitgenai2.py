# -*- coding: utf-8 -*-
"""streamlitgenai2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1d5MbQ-HNqoM6QKVYjxU1MeXpaxtfKzXH
"""

!pip install streamlit

import streamlit as st
from transformers import T5Tokenizer, T5ForConditionalGeneration
import torch

# -------------------------------
# ‚öôÔ∏è Load the model (cached)
# -------------------------------
@st.cache_resource(show_spinner=True)
def load_model():
    model_name = "t5-small"  # smaller model for hosted/cloud use
    tokenizer = T5Tokenizer.from_pretrained(model_name)
    model = T5ForConditionalGeneration.from_pretrained(model_name)
    device = "cuda" if torch.cuda.is_available() else "cpu"
    model.to(device)
    return model, tokenizer, device

model, tokenizer, device = load_model()

# -------------------------------
# üß† Simplify function
# -------------------------------
def simplify_text(text):
    input_text = "simplify: " + text.strip()
    inputs = tokenizer.encode(
        input_text, return_tensors="pt",
        truncation=True, max_length=512
    ).to(device)
    outputs = model.generate(
        inputs,
        max_length=150,
        num_beams=4,
        early_stopping=True,
        length_penalty=1.0
    )
    return tokenizer.decode(outputs[0], skip_special_tokens=True)

# -------------------------------
# ü™Ñ Streamlit UI
# -------------------------------
st.set_page_config(page_title="Automatic Text Simplification", layout="centered")
st.title("üß† Automatic Text Simplification Tool")
st.write("Simplify complex English text using a Generative AI model (T5).")

text = st.text_area("‚úçÔ∏è Enter your complex text below:", height=200)

if st.button("Simplify"):
    if not text.strip():
        st.warning("Please enter some text to simplify.")
    else:
        with st.spinner("Simplifying... please wait"):
            simplified = simplify_text(text)
        st.subheader("üîπ Simplified Text:")
        st.write(simplified)

st.caption("Built with ‚ù§Ô∏è using Streamlit and Hugging Face Transformers")

